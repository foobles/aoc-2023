# MMC1 Mapper
# 128KB PRG ROM
# 8KB CHR ROM

MEMORY {
    HEADER: start = $0000,  size = $0010;
    ZP:     start = $0000,  size = $0100,   file = "";
    RAM:    start = $0200,  size = $0600,   file = "";
    PRG0:   start = $8000,  size = $4000,   fill = yes;
    PRG1:   start = $8000,  size = $4000,   fill = yes;
    PRG2:   start = $8000,  size = $4000,   fill = yes;
    PRG3:   start = $8000,  size = $4000,   fill = yes;
    PRG4:   start = $8000,  size = $4000,   fill = yes;
    PRG5:   start = $8000,  size = $4000,   fill = yes;
    PRG6:   start = $8000,  size = $4000,   fill = yes;
    PRG7:   start = $C000,  size = $4000,   fill = yes;
    CHR0:   start = $0000,  size = $1000,   fill = yes;
    CHR1:   start = $1000,  size = $1000,   fill = yes;
}

SEGMENTS {
    HEADER:     type = ro,  load = HEADER,  define = yes;
    ZEROPAGE:   type = zp,  load = ZP, optional = yes;

    CODE0:      type = ro,  load = PRG0, optional = yes;
    CODE1:      type = ro,  load = PRG1, optional = yes;
    CODE2:      type = ro,  load = PRG2, optional = yes;
    CODE3:      type = ro,  load = PRG3, optional = yes;
    CODE4:      type = ro,  load = PRG4, optional = yes;
    CODE5:      type = ro,  load = PRG5, optional = yes;
    CODE6:      type = ro,  load = PRG6, optional = yes;
    CODE7:      type = ro,  load = PRG7, optional = yes;

    STUB0:      type = ro,  load = PRG0, start = $BFF4;
    STUB1:      type = ro,  load = PRG1, start = $BFF4;
    STUB2:      type = ro,  load = PRG2, start = $BFF4;
    STUB3:      type = ro,  load = PRG3, start = $BFF4;
    STUB4:      type = ro,  load = PRG4, start = $BFF4;
    STUB5:      type = ro,  load = PRG5, start = $BFF4;
    STUB6:      type = ro,  load = PRG6, start = $BFF4;
    STUB7:      type = ro,  load = PRG7, start = $FFF4;

    BSS:        type = bss, load = RAM, optional = yes, align = $100;
    CHARS0:     type = ro,  load = CHR0;
    CHARS1:     type = ro,  load = CHR1;
}